for(i in 1:Nspp){
for(j in 1:Nspp){
beta[i,j] ~ dnorm(0,0.01)
} # end j
} # end i
###################
## PROCESS MODEL ##
###################
## LOCAL POPULATION GROWTH ##
for(i in 1:Nspp){
for(s in 1:Nsites){
#log(phi[i,s,1]) ~ dnorm(0,0.01) # Not sure if this is needed or correct...phi in year 1 was NA if not included...
for(t in 2:Nyears){
log(phi[i,s,t]) <- log(phi.mu[i]) +               # mean local pop. growth rate for each spp (just a spp specific intercept??)
(alpha[i] * N[i,s,t-1]) +                   # effect of intra-spp. density dependence on growth rate
inprod(beta[i,1:Nspp], N[1:Nspp,s,t-1])    # effect of spp j on pop. growth rate of spp. i
#b.mast[i] * mast[t-1] +                     # effect of environmental covs on growth rate  (should these be t or t-1??)
#b.rsd[i] * rsd[s,t-1] +
#b.herbs[i] * herbs[s,t-1] +
#b.snwd[i] * snwd[t-1] +
#b.tmin[i] * tmin[t-1] +
#b.precip[i] * tmin[t-1]
} # end t
} # end s
} # end i
## MOVEMENT RATE BETWEEN SITES ##
for(i in 1:Nspp){
for(s in 1:Nsites){
eta.theta[i,s,1:Nsites] <- exp(-1 * kappa[i] * dist.mat[1:Nsites,s])        # movement rate influenced by distance between sites & decay rate (kappa)
theta[i,s,1:Nsites] <- eta.theta[i,s,1:Nsites]/sum(eta.theta[i,s,1:Nsites])
} # end i
} # end s
## ABUNDANCE MODEL ##
for(i in 1:Nspp){
for(s in 1:Nsites){
N[i,s,1] ~ dpois(lambda[i,s,1])  # abundance in first primary observation occasion (first primary occasion == year or trap day? Or month?)
log(lambda[i,s,1]) <- log(lambda.mu[i]) +         # species-specific mean initial abundance
#b.mast[i] * mast[1] +       # effect of environmental covs on initial abundance (I think these are added here as well as in growth rate estimation?)
#b.rsd[i] * rsd[s,1] +
#b.herbs[i] * herbs[s,1] +
#b.snwd[i] * snwd[1] +
#b.tmin[i] * tmin[1] +
#b.precip[i] * tmin[1]
lambda.eta[i,1]             # error term
for(t in 2:Nyears){
N[i,s,t] ~ dpois(lambda[i,s,t])  # abundance in subsequent primary observation occasions
log(lambda[i,s,t]) <- log(sum(N[i,s,t-1] * phi[i,s,t] * theta[i,s,1:Nsites])) + eta.abund[i,s,t]  # not entirely sure this is formatted correctly
} # end t
## OBSERVATION MODEL ##
for(t in 1:Nyears){
for(m in 1:Nmonths){
for(n in 1:Ndays){
y[i,s,t,m,n] ~ dbinom(det.p[i,s,t,m,n], N[i,s,t])
logit(det.p[i,s,t,m,n]) <- logit(mu.det.p[i]) +                 # mean local detection prob. for each spp
# p.jday[i]   * jday[i,t,m,n] +        # effect of environmental covariates on detection probability
# p.temp[i]   * temp.det[i,t,m,n] +
# p.precip[i] * precip.det[i,t,m,n] +
eta.det[i,s,t,m,n]                   # error term
} # end n
} # end m
} # end t
} # end s
} # end i
##########################
### DERIVED PARAMETERS ###
##########################
for(i in 1:Nspp){
for(s in 1:Nsites){
# Mean population growth rate
mean.phi[i,s] <- mean(phi[i,s,])
# Mean movement rate
mean.theta[i,s] <- mean(theta[i,s,])
for(t in 1:Nyears){
# Mean detection probability (spp, site, year)
mean.det.p[i,s,t] <- mean(det.p[i,s,t,,])
} # end t
} # end s
} # end i
# ## ASSESS MODEL FIT USING CHI-SQUARED DISCREPANCY##
# for(i in 1:Nspp){
#   for(s in 1:Nsites){
#     for(t in 1:Nyears){
#       for(m in 1:Nmonths){
#         for(n in 1:Ndays){
#
#           # COMPUTE FIT STATISTIC FOR OBSERVED DATA #
#           eval[i,s,t,m,n] <- det.p[i,s,t,m,n] * N[i,s,t]
#           E.obs[i,s,t,m,n] <- pow((y[i,s,t,m,n] - eval[i,s,t,m,n]),2)/(eval[i,s,t,m,n] + 0.5)
#
#           # GENERATE REPLICATED DATA AND COMPUTE FIT STATISTIC FOR THEM
#           y.new[i,s,t,m,n] ~ dbin(det.p[i,s,t,m,n], N[i,s,t])
#           E.new[i,s,t,m,n] <- pow((y.new[i,s,t,m,n] - eval[i,s,t,m,n]),2)/(eval[i,s,t,m,n]+0.5)
#
#         }
#       }
#     }
#   }
# }
#
# ## BAYESIAN P-VALUE CALCULATIONS ##
# fit.obs <- sum(E.obs[1:Nspp,1:Nsites,1:Nyears,1:Nmonths,1:Ndays])
# fit.new <- sum(E.new[1:Nspp,1:Nsites,1:Nyears,1:Nmonths,1:Ndays])
#
# b.pvalue <- mean(fit.new > fit.obs)
}) # END MODEL
### MODEL 2: ADD IN COVARIATES FOR ABUNDANCE ###
nimbleBEF2 <- nimbleCode({
##############
### PRIORS ###
##############
for(i in 1:Nspp){
# Mean population growth rate (positive or negative)
phi.mu[i] ~ dnorm(0,0.01)
# Effect of density dependence on growth rate (positive or negative)
alpha[i] ~ dnorm(0,0.01)
# Effect of environmental covariates on population growth rate (phi) & on initial abundance (?)
b.rsd[i]    ~ dnorm(0,0.01)
b.mast[i]   ~ dnorm(0,0.01)
b.herbs[i]  ~ dnorm(0,0.01)
b.tmin[i]   ~ dnorm(0,0.01)
b.snwd[i]   ~ dnorm(0,0.01)
#b.precip[i] ~ dnorm(0,0.01)
# Mean initial abundance (has to be > 0)
lambda.mu[i] ~ dunif(0,5)
# Decay parameter for site movement (maybe needs to be >= 0?)
kappa[i] ~ dnorm(0,0.01)
# Species-specific mean detection probability
mu.det.p[i] ~ dunif(0,1) # constrained between 0 & 1
# Effect of environmental covariates on detection probability
# p.jday[i]   ~ dlogis(0,1)
# p.precip[i] ~ dlogis(0,1)
# p.temp[i]   ~ dlogis(0,1)
for(s in 1:Nsites){
# Error term for initial abundance
lambda.eta[i,s] ~ dnorm(0,0.01)
# Growth rate in year 1 (constrained >= 0)
phi[i,s,1] ~ dunif(0,5)
for(t in 1:Nyears){
# Error term for abundance
eta.abund[i,s,t] ~ dnorm(0,0.01)
for(m in 1:Nmonths){
for(n in 1:Ndays){
# Error term for detection probability
eta.det[i,s,t,m,n] ~ dlogis(0,1)
} # end n
} # end m
} # end t
} # end s
} # end i
# Effect of spp j on growth rate of spp i
for(i in 1:Nspp){
for(j in 1:Nspp){
beta[i,j] ~ dnorm(0,0.01)
} # end j
} # end i
###################
## PROCESS MODEL ##
###################
## LOCAL POPULATION GROWTH ##
for(i in 1:Nspp){
for(s in 1:Nsites){
#log(phi[i,s,1]) ~ dnorm(0,0.01) # Not sure if this is needed or correct...phi in year 1 was NA if not included...
for(t in 2:Nyears){
log(phi[i,s,t]) <- log(phi.mu[i]) +               # mean local pop. growth rate for each spp (just a spp specific intercept??)
(alpha[i] * N[i,s,t-1]) +                   # effect of intra-spp. density dependence on growth rate
inprod(beta[i,1:Nspp], N[1:Nspp,s,t-1]) +    # effect of spp j on pop. growth rate of spp. i
b.mast[i] * mast[t-1] +                     # effect of environmental covs on growth rate  (should these be t or t-1??)
b.rsd[i] * rsd[s,t-1] +
b.herbs[i] * herbs[s,t-1] +
b.snwd[i] * snwd[t-1] +
b.tmin[i] * tmin[t-1]
#b.precip[i] * precip[t-1] # add later, might need to change indexing and too fried to deal with that not
} # end t
} # end s
} # end i
## MOVEMENT RATE BETWEEN SITES ##
for(i in 1:Nspp){
for(s in 1:Nsites){
eta.theta[i,s,1:Nsites] <- exp(-1 * kappa[i] * dist.mat[1:Nsites,s])        # movement rate influenced by distance between sites & decay rate (kappa)
theta[i,s,1:Nsites] <- eta.theta[i,s,1:Nsites]/sum(eta.theta[i,s,1:Nsites])
} # end i
} # end s
## ABUNDANCE MODEL ##
for(i in 1:Nspp){
for(s in 1:Nsites){
N[i,s,1] ~ dpois(lambda[i,s,1])  # abundance in first primary observation occasion (first primary occasion == year or trap day? Or month?)
log(lambda[i,s,1]) <- log(lambda.mu[i]) +         # species-specific mean initial abundance
b.mast[i] * mast[1] +       # effect of environmental covs on initial abundance (I think these are added here as well as in growth rate estimation?)
b.rsd[i] * rsd[s,1] +
b.herbs[i] * herbs[s,1] +
b.snwd[i] * snwd[1] +
b.tmin[i] * tmin[1] +
#b.precip[i] * tmin[1] +
lambda.eta[i,1]             # error term
for(t in 2:Nyears){
N[i,s,t] ~ dpois(lambda[i,s,t])  # abundance in subsequent primary observation occasions
log(lambda[i,s,t]) <- log(sum(N[i,s,t-1] * phi[i,s,t] * theta[i,s,1:Nsites])) + eta.abund[i,s,t]  # not entirely sure this is formatted correctly
} # end t
## OBSERVATION MODEL ##
for(t in 1:Nyears){
for(m in 1:Nmonths){
for(n in 1:Ndays){
y[i,s,t,m,n] ~ dbinom(det.p[i,s,t,m,n], N[i,s,t])
logit(det.p[i,s,t,m,n]) <- logit(mu.det.p[i]) +                 # mean local detection prob. for each spp
# p.jday[i]   * jday[i,t,m,n] +        # effect of environmental covariates on detection probability
# p.temp[i]   * temp.det[i,t,m,n] +
# p.precip[i] * precip.det[i,t,m,n] +
eta.det[i,s,t,m,n]                   # error term
} # end n
} # end m
} # end t
} # end s
} # end i
##########################
### DERIVED PARAMETERS ###
##########################
for(i in 1:Nspp){
for(s in 1:Nsites){
# Mean population growth rate
mean.phi[i,s] <- mean(phi[i,s,])
# Mean movement rate
mean.theta[i,s] <- mean(theta[i,s,])
for(t in 1:Nyears){
# Mean detection probability (spp, site, year)
mean.det.p[i,s,t] <- mean(det.p[i,s,t,,])
} # end t
} # end s
} # end i
# ## ASSESS MODEL FIT USING CHI-SQUARED DISCREPANCY##
# for(i in 1:Nspp){
#   for(s in 1:Nsites){
#     for(t in 1:Nyears){
#       for(m in 1:Nmonths){
#         for(n in 1:Ndays){
#
#           # COMPUTE FIT STATISTIC FOR OBSERVED DATA #
#           eval[i,s,t,m,n] <- det.p[i,s,t,m,n] * N[i,s,t]
#           E.obs[i,s,t,m,n] <- pow((y[i,s,t,m,n] - eval[i,s,t,m,n]),2)/(eval[i,s,t,m,n] + 0.5)
#
#           # GENERATE REPLICATED DATA AND COMPUTE FIT STATISTIC FOR THEM
#           y.new[i,s,t,m,n] ~ dbin(det.p[i,s,t,m,n], N[i,s,t])
#           E.new[i,s,t,m,n] <- pow((y.new[i,s,t,m,n] - eval[i,s,t,m,n]),2)/(eval[i,s,t,m,n]+0.5)
#
#         }
#       }
#     }
#   }
# }
#
# ## BAYESIAN P-VALUE CALCULATIONS ##
# fit.obs <- sum(E.obs[1:Nspp,1:Nsites,1:Nyears,1:Nmonths,1:Ndays])
# fit.new <- sum(E.new[1:Nspp,1:Nsites,1:Nyears,1:Nmonths,1:Ndays])
#
# b.pvalue <- mean(fit.new > fit.obs)
}) # END MODEL
coords <- read_csv("Data/CompCoords.csv")
#coords <- coords %>% filter(COMP=="36"|COMP=="45"|COMP=="CC"|COMP=="5&6") # subset same grids as above
dist.mat <- matrix(NA, Nsites, Nsites)
for (i in 1:Nsites) {
for (j in 1:Nsites) {
dist.mat[i,j] <- sqrt((coords$Lat[i] - coords$Lat[j]) ^ 2 + (coords$Lon[i] - coords$Lon[j]) ^ 2)
} # j
} # i
dist.mat
# Bundle data
model.data <- list(y = y,
mast = yearly.covs$mast,
rsd = t(rsd.mat),
herbs = t(herbs.mat),
#precip = ,
snwd = yearly.covs$snwd,
tmin = yearly.covs$tmin,
# jday = ,
# precip.det = ,
# temp.det = ,
dist.mat = dist.mat)
model.constants <- list(Nspp = Nspp,
Nsites = Nsites,
Nyears = Nyears,
Nmonths = Nmonths,
Ndays = Ndays)
inits <- list(N = round((ymax + 1)),
# initial mean abundance
lambda.mu = runif(Nspp,0,5),
# abundance
lambda = array(runif(Nspp*Nsites*Nyears,0,10),dim=c(Nspp,Nsites,Nyears)),
# mean pop. growth rate
phi.mu = runif(Nspp,0,5),
# intra-spp density dependence
alpha = rnorm(Nspp,0,0.01),
# effect of environmental covs on growth rate & abundance
b.mast = rnorm(Nspp,0,0.01),
b.rsd = rnorm(Nspp,0,0.01),
b.herbs = rnorm(Nspp,0,0.01),
b.snwd = rnorm(Nspp,0,0.01),
b.tmin = rnorm(Nspp,0,0.01),
#b.precip = rnorm(Nspp,0,0.01),
# decay param. for site movement (constrain to be positive?)
kappa = rnorm(Nspp,0,0.01),
# mean detection prob
mu.det.p = runif(Nspp,0,1),
# effect of environmental covs on detection probability
# p.jday = dnorm(0,0.01),
# p.precip = dnorm(0,0.01),
# p.temp = dnorm(0,0.01),
# error for initial abundance
lambda.eta = matrix(rnorm(Nspp*Nsites,0,1),nrow=Nspp),
# error for abundance after year 1
eta.abund = array(rnorm(Nspp*Nsites*Nyears),dim=c(Nspp,Nsites,Nyears)),
# detection probability
det.p = array(runif(Nspp*Nsites*Nyears*Nmonths*Ndays,0,1),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# error for detection
eta.det = array(rnorm(Nspp*Nsites*Nyears*Nmonths*Ndays),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# inter-spp interactions
beta = matrix(rnorm(Nspp*Nspp,0,0.01),nrow=Nspp),
# growth rate
phi = array(runif(Nspp*Nsites*Nyears,0,5),dim=c(Nspp,Nsites,Nyears)),
# movement rate (constrain to be positive?)
theta = array(rnorm(Nspp*Nsites*Nsites,0,0.01),dim=c(Nspp,Nsites,Nsites))
)
# Initial values (not entirely confident on these values...also not sure what actually needs inits and what doesn't)
ymax <- apply(y, 1:3, max)
inits <- list(N = round((ymax + 1)),
# initial mean abundance
lambda.mu = runif(Nspp,0,5),
# abundance
lambda = array(runif(Nspp*Nsites*Nyears,0,10),dim=c(Nspp,Nsites,Nyears)),
# mean pop. growth rate
phi.mu = runif(Nspp,0,5),
# intra-spp density dependence
alpha = rnorm(Nspp,0,0.01),
# effect of environmental covs on growth rate & abundance
b.mast = rnorm(Nspp,0,0.01),
b.rsd = rnorm(Nspp,0,0.01),
b.herbs = rnorm(Nspp,0,0.01),
b.snwd = rnorm(Nspp,0,0.01),
b.tmin = rnorm(Nspp,0,0.01),
#b.precip = rnorm(Nspp,0,0.01),
# decay param. for site movement (constrain to be positive?)
kappa = rnorm(Nspp,0,0.01),
# mean detection prob
mu.det.p = runif(Nspp,0,1),
# effect of environmental covs on detection probability
# p.jday = dnorm(0,0.01),
# p.precip = dnorm(0,0.01),
# p.temp = dnorm(0,0.01),
# error for initial abundance
lambda.eta = matrix(rnorm(Nspp*Nsites,0,1),nrow=Nspp),
# error for abundance after year 1
eta.abund = array(rnorm(Nspp*Nsites*Nyears),dim=c(Nspp,Nsites,Nyears)),
# detection probability
det.p = array(runif(Nspp*Nsites*Nyears*Nmonths*Ndays,0,1),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# error for detection
eta.det = array(rnorm(Nspp*Nsites*Nyears*Nmonths*Ndays),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# inter-spp interactions
beta = matrix(rnorm(Nspp*Nspp,0,0.01),nrow=Nspp),
# growth rate
phi = array(runif(Nspp*Nsites*Nyears,0,5),dim=c(Nspp,Nsites,Nyears)),
# movement rate (constrain to be positive?)
theta = array(rnorm(Nspp*Nsites*Nsites,0,0.01),dim=c(Nspp,Nsites,Nsites))
)
# Run model
# Parameters monitored
params <- c("N",          # estimated abundance
#"mean.det.p", # mean detection probability
"mean.phi",   # mean local population growth rate
"mean.theta", # mean movement rate between sites
"kappa",      # decay parameter
"beta",       # effect ofinter-specific interactions
"alpha",       # effect of intra-specific density
"b.mast",     # abundance covariate effects
"b.rsd",
"b.herbs",
"b.snwd",
"b.tmin"
#"b.precip"
)
out1 <- nimbleMCMC(code = nimbleBEF2,
data = model.data,
inits  = inits,
constants = model.constants,
monitors = params,
niter = 100,
nburnin = 50,
nchains = 2)
yearly.covs$mast
length(yearly.covs$mast)
Nyears
unique(bef$YEAR)
bef <- read_csv("Data/BEF Mammal Count Data.csv")  # raw count data for all 18 spp
bef.dat <- bef %>%
filter(YEAR > 1993 & YEAR < 2023) %>%
group_by(YEAR, COMP, TP, SPECIES, DAY) %>%
summarise(total = sum(COUNT)) %>%
filter(TP != 0) %>%
mutate(DAY = ifelse(DAY <=10, DAY,
ifelse(DAY >10 & DAY <=20, DAY-10, DAY-20)))
# # Create subset of data for testing
# bef.dat <- bef.dat %>%
#   filter(YEAR>=2010 & YEAR<=2017) %>%  # 8 years
#   filter(COMP == "36"|COMP=="45"|COMP=="CC"|COMP=="5&6") %>% # 4 sites
#   filter(SPECIES=="MYGA"|SPECIES=="PEMA"|SPECIES=="PELE"|SPECIES=="NAIN") # 4 species
template <- expand.grid(unique(bef.dat$SPECIES),
unique(bef.dat$COMP),
unique(bef.dat$YEAR),
unique(bef.dat$TP),
unique(bef.dat$DAY)) %>%
rename("SPECIES" = 1,
"COMP" = 2,
"YEAR" = 3,
"TP" = 4,
"DAY" = 5)
all.dat <- left_join(template, bef.dat) %>% mutate_all(~replace(., is.na(.), 0))
Nspp  <-  length(unique(all.dat$SPECIES))
Nsites <- length(unique(all.dat$COMP))
Nyears <- length(unique(all.dat$YEAR))
Nmonths  <-  length(unique(all.dat$TP))
Ndays <- length(unique(all.dat$DAY))
y <- array(unlist(all.dat[,6]), dim=c(Nspp, Nsites, Nyears, Nmonths, Ndays))
dim(y)
y
coords <- read_csv("Data/CompCoords.csv")
#coords <- coords %>% filter(COMP=="36"|COMP=="45"|COMP=="CC"|COMP=="5&6") # subset same grids as above
dist.mat <- matrix(NA, Nsites, Nsites)
for (i in 1:Nsites) {
for (j in 1:Nsites) {
dist.mat[i,j] <- sqrt((coords$Lat[i] - coords$Lat[j]) ^ 2 + (coords$Lon[i] - coords$Lon[j]) ^ 2)
} # j
} # i
dist.mat
# Bundle data
model.data <- list(y = y,
mast = yearly.covs$mast,
rsd = t(rsd.mat),
herbs = t(herbs.mat),
#precip = ,
snwd = yearly.covs$snwd,
tmin = yearly.covs$tmin,
# jday = ,
# precip.det = ,
# temp.det = ,
dist.mat = dist.mat)
model.constants <- list(Nspp = Nspp,
Nsites = Nsites,
Nyears = Nyears,
Nmonths = Nmonths,
Ndays = Ndays)
Nyears
ymax <- apply(y, 1:3, max)
inits <- list(N = round((ymax + 1)),
# initial mean abundance
lambda.mu = runif(Nspp,0,5),
# abundance
lambda = array(runif(Nspp*Nsites*Nyears,0,10),dim=c(Nspp,Nsites,Nyears)),
# mean pop. growth rate
phi.mu = runif(Nspp,0,5),
# intra-spp density dependence
alpha = rnorm(Nspp,0,0.01),
# effect of environmental covs on growth rate & abundance
b.mast = rnorm(Nspp,0,0.01),
b.rsd = rnorm(Nspp,0,0.01),
b.herbs = rnorm(Nspp,0,0.01),
b.snwd = rnorm(Nspp,0,0.01),
b.tmin = rnorm(Nspp,0,0.01),
#b.precip = rnorm(Nspp,0,0.01),
# decay param. for site movement (constrain to be positive?)
kappa = rnorm(Nspp,0,0.01),
# mean detection prob
mu.det.p = runif(Nspp,0,1),
# effect of environmental covs on detection probability
# p.jday = dnorm(0,0.01),
# p.precip = dnorm(0,0.01),
# p.temp = dnorm(0,0.01),
# error for initial abundance
lambda.eta = matrix(rnorm(Nspp*Nsites,0,1),nrow=Nspp),
# error for abundance after year 1
eta.abund = array(rnorm(Nspp*Nsites*Nyears),dim=c(Nspp,Nsites,Nyears)),
# detection probability
det.p = array(runif(Nspp*Nsites*Nyears*Nmonths*Ndays,0,1),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# error for detection
eta.det = array(rnorm(Nspp*Nsites*Nyears*Nmonths*Ndays),dim=c(Nspp,Nsites,Nyears,Nmonths,Ndays)),
# inter-spp interactions
beta = matrix(rnorm(Nspp*Nspp,0,0.01),nrow=Nspp),
# growth rate
phi = array(runif(Nspp*Nsites*Nyears,0,5),dim=c(Nspp,Nsites,Nyears)),
# movement rate (constrain to be positive?)
theta = array(rnorm(Nspp*Nsites*Nsites,0,0.01),dim=c(Nspp,Nsites,Nsites))
)
# Run model
# Parameters monitored
params <- c("N",          # estimated abundance
#"mean.det.p", # mean detection probability
"mean.phi",   # mean local population growth rate
"mean.theta", # mean movement rate between sites
"kappa",      # decay parameter
"beta",       # effect ofinter-specific interactions
"alpha",       # effect of intra-specific density
"b.mast",     # abundance covariate effects
"b.rsd",
"b.herbs",
"b.snwd",
"b.tmin"
#"b.precip"
)
out1 <- nimbleMCMC(code = nimbleBEF2,
data = model.data,
inits  = inits,
constants = model.constants,
monitors = params,
niter = 100,
nburnin = 50,
nchains = 2)
